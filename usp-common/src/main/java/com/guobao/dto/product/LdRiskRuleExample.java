package com.guobao.dto.product;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LdRiskRuleExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public LdRiskRuleExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andRiskcodeIsNull() {
			addCriterion("RISKCODE is null");
			return (Criteria) this;
		}

		public Criteria andRiskcodeIsNotNull() {
			addCriterion("RISKCODE is not null");
			return (Criteria) this;
		}

		public Criteria andRiskcodeEqualTo(String value) {
			addCriterion("RISKCODE =", value, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeNotEqualTo(String value) {
			addCriterion("RISKCODE <>", value, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeGreaterThan(String value) {
			addCriterion("RISKCODE >", value, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeGreaterThanOrEqualTo(String value) {
			addCriterion("RISKCODE >=", value, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeLessThan(String value) {
			addCriterion("RISKCODE <", value, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeLessThanOrEqualTo(String value) {
			addCriterion("RISKCODE <=", value, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeLike(String value) {
			addCriterion("RISKCODE like", value, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeNotLike(String value) {
			addCriterion("RISKCODE not like", value, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeIn(List<String> values) {
			addCriterion("RISKCODE in", values, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeNotIn(List<String> values) {
			addCriterion("RISKCODE not in", values, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeBetween(String value1, String value2) {
			addCriterion("RISKCODE between", value1, value2, "riskcode");
			return (Criteria) this;
		}

		public Criteria andRiskcodeNotBetween(String value1, String value2) {
			addCriterion("RISKCODE not between", value1, value2, "riskcode");
			return (Criteria) this;
		}

		public Criteria andSalechnlIsNull() {
			addCriterion("SALECHNL is null");
			return (Criteria) this;
		}

		public Criteria andSalechnlIsNotNull() {
			addCriterion("SALECHNL is not null");
			return (Criteria) this;
		}

		public Criteria andSalechnlEqualTo(String value) {
			addCriterion("SALECHNL =", value, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlNotEqualTo(String value) {
			addCriterion("SALECHNL <>", value, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlGreaterThan(String value) {
			addCriterion("SALECHNL >", value, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlGreaterThanOrEqualTo(String value) {
			addCriterion("SALECHNL >=", value, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlLessThan(String value) {
			addCriterion("SALECHNL <", value, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlLessThanOrEqualTo(String value) {
			addCriterion("SALECHNL <=", value, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlLike(String value) {
			addCriterion("SALECHNL like", value, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlNotLike(String value) {
			addCriterion("SALECHNL not like", value, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlIn(List<String> values) {
			addCriterion("SALECHNL in", values, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlNotIn(List<String> values) {
			addCriterion("SALECHNL not in", values, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlBetween(String value1, String value2) {
			addCriterion("SALECHNL between", value1, value2, "salechnl");
			return (Criteria) this;
		}

		public Criteria andSalechnlNotBetween(String value1, String value2) {
			addCriterion("SALECHNL not between", value1, value2, "salechnl");
			return (Criteria) this;
		}

		public Criteria andComgroupIsNull() {
			addCriterion("COMGROUP is null");
			return (Criteria) this;
		}

		public Criteria andComgroupIsNotNull() {
			addCriterion("COMGROUP is not null");
			return (Criteria) this;
		}

		public Criteria andComgroupEqualTo(String value) {
			addCriterion("COMGROUP =", value, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupNotEqualTo(String value) {
			addCriterion("COMGROUP <>", value, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupGreaterThan(String value) {
			addCriterion("COMGROUP >", value, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupGreaterThanOrEqualTo(String value) {
			addCriterion("COMGROUP >=", value, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupLessThan(String value) {
			addCriterion("COMGROUP <", value, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupLessThanOrEqualTo(String value) {
			addCriterion("COMGROUP <=", value, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupLike(String value) {
			addCriterion("COMGROUP like", value, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupNotLike(String value) {
			addCriterion("COMGROUP not like", value, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupIn(List<String> values) {
			addCriterion("COMGROUP in", values, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupNotIn(List<String> values) {
			addCriterion("COMGROUP not in", values, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupBetween(String value1, String value2) {
			addCriterion("COMGROUP between", value1, value2, "comgroup");
			return (Criteria) this;
		}

		public Criteria andComgroupNotBetween(String value1, String value2) {
			addCriterion("COMGROUP not between", value1, value2, "comgroup");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateIsNull() {
			addCriterion("STARTPOLAPPLYDATE is null");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateIsNotNull() {
			addCriterion("STARTPOLAPPLYDATE is not null");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateEqualTo(Date value) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE =", value, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateNotEqualTo(Date value) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE <>", value, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateGreaterThan(Date value) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE >", value, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE >=", value, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateLessThan(Date value) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE <", value, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE <=", value, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateIn(List<Date> values) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE in", values, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateNotIn(List<Date> values) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE not in", values, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE between", value1, value2, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartpolapplydateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("STARTPOLAPPLYDATE not between", value1, value2, "startpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateIsNull() {
			addCriterion("ENDPOLAPPLYDATE is null");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateIsNotNull() {
			addCriterion("ENDPOLAPPLYDATE is not null");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateEqualTo(Date value) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE =", value, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateNotEqualTo(Date value) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE <>", value, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateGreaterThan(Date value) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE >", value, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE >=", value, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateLessThan(Date value) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE <", value, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE <=", value, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateIn(List<Date> values) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE in", values, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateNotIn(List<Date> values) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE not in", values, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE between", value1, value2, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andEndpolapplydateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDPOLAPPLYDATE not between", value1, value2, "endpolapplydate");
			return (Criteria) this;
		}

		public Criteria andStartscandateIsNull() {
			addCriterion("STARTSCANDATE is null");
			return (Criteria) this;
		}

		public Criteria andStartscandateIsNotNull() {
			addCriterion("STARTSCANDATE is not null");
			return (Criteria) this;
		}

		public Criteria andStartscandateEqualTo(Date value) {
			addCriterionForJDBCDate("STARTSCANDATE =", value, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateNotEqualTo(Date value) {
			addCriterionForJDBCDate("STARTSCANDATE <>", value, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateGreaterThan(Date value) {
			addCriterionForJDBCDate("STARTSCANDATE >", value, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("STARTSCANDATE >=", value, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateLessThan(Date value) {
			addCriterionForJDBCDate("STARTSCANDATE <", value, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("STARTSCANDATE <=", value, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateIn(List<Date> values) {
			addCriterionForJDBCDate("STARTSCANDATE in", values, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateNotIn(List<Date> values) {
			addCriterionForJDBCDate("STARTSCANDATE not in", values, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("STARTSCANDATE between", value1, value2, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscandateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("STARTSCANDATE not between", value1, value2, "startscandate");
			return (Criteria) this;
		}

		public Criteria andStartscantimeIsNull() {
			addCriterion("STARTSCANTIME is null");
			return (Criteria) this;
		}

		public Criteria andStartscantimeIsNotNull() {
			addCriterion("STARTSCANTIME is not null");
			return (Criteria) this;
		}

		public Criteria andStartscantimeEqualTo(String value) {
			addCriterion("STARTSCANTIME =", value, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeNotEqualTo(String value) {
			addCriterion("STARTSCANTIME <>", value, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeGreaterThan(String value) {
			addCriterion("STARTSCANTIME >", value, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeGreaterThanOrEqualTo(String value) {
			addCriterion("STARTSCANTIME >=", value, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeLessThan(String value) {
			addCriterion("STARTSCANTIME <", value, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeLessThanOrEqualTo(String value) {
			addCriterion("STARTSCANTIME <=", value, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeLike(String value) {
			addCriterion("STARTSCANTIME like", value, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeNotLike(String value) {
			addCriterion("STARTSCANTIME not like", value, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeIn(List<String> values) {
			addCriterion("STARTSCANTIME in", values, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeNotIn(List<String> values) {
			addCriterion("STARTSCANTIME not in", values, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeBetween(String value1, String value2) {
			addCriterion("STARTSCANTIME between", value1, value2, "startscantime");
			return (Criteria) this;
		}

		public Criteria andStartscantimeNotBetween(String value1, String value2) {
			addCriterion("STARTSCANTIME not between", value1, value2, "startscantime");
			return (Criteria) this;
		}

		public Criteria andEndscandateIsNull() {
			addCriterion("ENDSCANDATE is null");
			return (Criteria) this;
		}

		public Criteria andEndscandateIsNotNull() {
			addCriterion("ENDSCANDATE is not null");
			return (Criteria) this;
		}

		public Criteria andEndscandateEqualTo(Date value) {
			addCriterionForJDBCDate("ENDSCANDATE =", value, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateNotEqualTo(Date value) {
			addCriterionForJDBCDate("ENDSCANDATE <>", value, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateGreaterThan(Date value) {
			addCriterionForJDBCDate("ENDSCANDATE >", value, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDSCANDATE >=", value, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateLessThan(Date value) {
			addCriterionForJDBCDate("ENDSCANDATE <", value, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDSCANDATE <=", value, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateIn(List<Date> values) {
			addCriterionForJDBCDate("ENDSCANDATE in", values, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateNotIn(List<Date> values) {
			addCriterionForJDBCDate("ENDSCANDATE not in", values, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDSCANDATE between", value1, value2, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscandateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDSCANDATE not between", value1, value2, "endscandate");
			return (Criteria) this;
		}

		public Criteria andEndscantimeIsNull() {
			addCriterion("ENDSCANTIME is null");
			return (Criteria) this;
		}

		public Criteria andEndscantimeIsNotNull() {
			addCriterion("ENDSCANTIME is not null");
			return (Criteria) this;
		}

		public Criteria andEndscantimeEqualTo(String value) {
			addCriterion("ENDSCANTIME =", value, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeNotEqualTo(String value) {
			addCriterion("ENDSCANTIME <>", value, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeGreaterThan(String value) {
			addCriterion("ENDSCANTIME >", value, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeGreaterThanOrEqualTo(String value) {
			addCriterion("ENDSCANTIME >=", value, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeLessThan(String value) {
			addCriterion("ENDSCANTIME <", value, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeLessThanOrEqualTo(String value) {
			addCriterion("ENDSCANTIME <=", value, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeLike(String value) {
			addCriterion("ENDSCANTIME like", value, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeNotLike(String value) {
			addCriterion("ENDSCANTIME not like", value, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeIn(List<String> values) {
			addCriterion("ENDSCANTIME in", values, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeNotIn(List<String> values) {
			addCriterion("ENDSCANTIME not in", values, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeBetween(String value1, String value2) {
			addCriterion("ENDSCANTIME between", value1, value2, "endscantime");
			return (Criteria) this;
		}

		public Criteria andEndscantimeNotBetween(String value1, String value2) {
			addCriterion("ENDSCANTIME not between", value1, value2, "endscantime");
			return (Criteria) this;
		}

		public Criteria andOperatorIsNull() {
			addCriterion("OPERATOR is null");
			return (Criteria) this;
		}

		public Criteria andOperatorIsNotNull() {
			addCriterion("OPERATOR is not null");
			return (Criteria) this;
		}

		public Criteria andOperatorEqualTo(String value) {
			addCriterion("OPERATOR =", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorNotEqualTo(String value) {
			addCriterion("OPERATOR <>", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorGreaterThan(String value) {
			addCriterion("OPERATOR >", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorGreaterThanOrEqualTo(String value) {
			addCriterion("OPERATOR >=", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorLessThan(String value) {
			addCriterion("OPERATOR <", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorLessThanOrEqualTo(String value) {
			addCriterion("OPERATOR <=", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorLike(String value) {
			addCriterion("OPERATOR like", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorNotLike(String value) {
			addCriterion("OPERATOR not like", value, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorIn(List<String> values) {
			addCriterion("OPERATOR in", values, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorNotIn(List<String> values) {
			addCriterion("OPERATOR not in", values, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorBetween(String value1, String value2) {
			addCriterion("OPERATOR between", value1, value2, "operator");
			return (Criteria) this;
		}

		public Criteria andOperatorNotBetween(String value1, String value2) {
			addCriterion("OPERATOR not between", value1, value2, "operator");
			return (Criteria) this;
		}

		public Criteria andMakedateIsNull() {
			addCriterion("MAKEDATE is null");
			return (Criteria) this;
		}

		public Criteria andMakedateIsNotNull() {
			addCriterion("MAKEDATE is not null");
			return (Criteria) this;
		}

		public Criteria andMakedateEqualTo(Date value) {
			addCriterionForJDBCDate("MAKEDATE =", value, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateNotEqualTo(Date value) {
			addCriterionForJDBCDate("MAKEDATE <>", value, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateGreaterThan(Date value) {
			addCriterionForJDBCDate("MAKEDATE >", value, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("MAKEDATE >=", value, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateLessThan(Date value) {
			addCriterionForJDBCDate("MAKEDATE <", value, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("MAKEDATE <=", value, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateIn(List<Date> values) {
			addCriterionForJDBCDate("MAKEDATE in", values, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateNotIn(List<Date> values) {
			addCriterionForJDBCDate("MAKEDATE not in", values, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("MAKEDATE between", value1, value2, "makedate");
			return (Criteria) this;
		}

		public Criteria andMakedateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("MAKEDATE not between", value1, value2, "makedate");
			return (Criteria) this;
		}

		public Criteria andMaketimeIsNull() {
			addCriterion("MAKETIME is null");
			return (Criteria) this;
		}

		public Criteria andMaketimeIsNotNull() {
			addCriterion("MAKETIME is not null");
			return (Criteria) this;
		}

		public Criteria andMaketimeEqualTo(String value) {
			addCriterion("MAKETIME =", value, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeNotEqualTo(String value) {
			addCriterion("MAKETIME <>", value, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeGreaterThan(String value) {
			addCriterion("MAKETIME >", value, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeGreaterThanOrEqualTo(String value) {
			addCriterion("MAKETIME >=", value, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeLessThan(String value) {
			addCriterion("MAKETIME <", value, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeLessThanOrEqualTo(String value) {
			addCriterion("MAKETIME <=", value, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeLike(String value) {
			addCriterion("MAKETIME like", value, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeNotLike(String value) {
			addCriterion("MAKETIME not like", value, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeIn(List<String> values) {
			addCriterion("MAKETIME in", values, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeNotIn(List<String> values) {
			addCriterion("MAKETIME not in", values, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeBetween(String value1, String value2) {
			addCriterion("MAKETIME between", value1, value2, "maketime");
			return (Criteria) this;
		}

		public Criteria andMaketimeNotBetween(String value1, String value2) {
			addCriterion("MAKETIME not between", value1, value2, "maketime");
			return (Criteria) this;
		}

		public Criteria andModifydateIsNull() {
			addCriterion("MODIFYDATE is null");
			return (Criteria) this;
		}

		public Criteria andModifydateIsNotNull() {
			addCriterion("MODIFYDATE is not null");
			return (Criteria) this;
		}

		public Criteria andModifydateEqualTo(Date value) {
			addCriterionForJDBCDate("MODIFYDATE =", value, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateNotEqualTo(Date value) {
			addCriterionForJDBCDate("MODIFYDATE <>", value, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateGreaterThan(Date value) {
			addCriterionForJDBCDate("MODIFYDATE >", value, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("MODIFYDATE >=", value, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateLessThan(Date value) {
			addCriterionForJDBCDate("MODIFYDATE <", value, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("MODIFYDATE <=", value, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateIn(List<Date> values) {
			addCriterionForJDBCDate("MODIFYDATE in", values, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateNotIn(List<Date> values) {
			addCriterionForJDBCDate("MODIFYDATE not in", values, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("MODIFYDATE between", value1, value2, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifydateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("MODIFYDATE not between", value1, value2, "modifydate");
			return (Criteria) this;
		}

		public Criteria andModifytimeIsNull() {
			addCriterion("MODIFYTIME is null");
			return (Criteria) this;
		}

		public Criteria andModifytimeIsNotNull() {
			addCriterion("MODIFYTIME is not null");
			return (Criteria) this;
		}

		public Criteria andModifytimeEqualTo(String value) {
			addCriterion("MODIFYTIME =", value, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeNotEqualTo(String value) {
			addCriterion("MODIFYTIME <>", value, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeGreaterThan(String value) {
			addCriterion("MODIFYTIME >", value, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeGreaterThanOrEqualTo(String value) {
			addCriterion("MODIFYTIME >=", value, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeLessThan(String value) {
			addCriterion("MODIFYTIME <", value, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeLessThanOrEqualTo(String value) {
			addCriterion("MODIFYTIME <=", value, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeLike(String value) {
			addCriterion("MODIFYTIME like", value, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeNotLike(String value) {
			addCriterion("MODIFYTIME not like", value, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeIn(List<String> values) {
			addCriterion("MODIFYTIME in", values, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeNotIn(List<String> values) {
			addCriterion("MODIFYTIME not in", values, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeBetween(String value1, String value2) {
			addCriterion("MODIFYTIME between", value1, value2, "modifytime");
			return (Criteria) this;
		}

		public Criteria andModifytimeNotBetween(String value1, String value2) {
			addCriterion("MODIFYTIME not between", value1, value2, "modifytime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ldriskrule
	 * @mbg.generated  Wed Mar 28 17:25:50 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ldriskrule
     *
     * @mbg.generated do_not_delete_during_merge Wed Mar 28 09:42:00 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}