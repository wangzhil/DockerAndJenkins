package com.guobao.dto.report;

import java.util.ArrayList;
import java.util.List;

public class LLAccidentSubExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public LLAccidentSubExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAccnoIsNull() {
            addCriterion("ACCNO is null");
            return (Criteria) this;
        }

        public Criteria andAccnoIsNotNull() {
            addCriterion("ACCNO is not null");
            return (Criteria) this;
        }

        public Criteria andAccnoEqualTo(String value) {
            addCriterion("ACCNO =", value, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoNotEqualTo(String value) {
            addCriterion("ACCNO <>", value, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoGreaterThan(String value) {
            addCriterion("ACCNO >", value, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoGreaterThanOrEqualTo(String value) {
            addCriterion("ACCNO >=", value, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoLessThan(String value) {
            addCriterion("ACCNO <", value, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoLessThanOrEqualTo(String value) {
            addCriterion("ACCNO <=", value, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoLike(String value) {
            addCriterion("ACCNO like", value, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoNotLike(String value) {
            addCriterion("ACCNO not like", value, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoIn(List<String> values) {
            addCriterion("ACCNO in", values, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoNotIn(List<String> values) {
            addCriterion("ACCNO not in", values, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoBetween(String value1, String value2) {
            addCriterion("ACCNO between", value1, value2, "accno");
            return (Criteria) this;
        }

        public Criteria andAccnoNotBetween(String value1, String value2) {
            addCriterion("ACCNO not between", value1, value2, "accno");
            return (Criteria) this;
        }

        public Criteria andCustomernoIsNull() {
            addCriterion("CUSTOMERNO is null");
            return (Criteria) this;
        }

        public Criteria andCustomernoIsNotNull() {
            addCriterion("CUSTOMERNO is not null");
            return (Criteria) this;
        }

        public Criteria andCustomernoEqualTo(String value) {
            addCriterion("CUSTOMERNO =", value, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoNotEqualTo(String value) {
            addCriterion("CUSTOMERNO <>", value, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoGreaterThan(String value) {
            addCriterion("CUSTOMERNO >", value, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoGreaterThanOrEqualTo(String value) {
            addCriterion("CUSTOMERNO >=", value, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoLessThan(String value) {
            addCriterion("CUSTOMERNO <", value, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoLessThanOrEqualTo(String value) {
            addCriterion("CUSTOMERNO <=", value, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoLike(String value) {
            addCriterion("CUSTOMERNO like", value, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoNotLike(String value) {
            addCriterion("CUSTOMERNO not like", value, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoIn(List<String> values) {
            addCriterion("CUSTOMERNO in", values, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoNotIn(List<String> values) {
            addCriterion("CUSTOMERNO not in", values, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoBetween(String value1, String value2) {
            addCriterion("CUSTOMERNO between", value1, value2, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomernoNotBetween(String value1, String value2) {
            addCriterion("CUSTOMERNO not between", value1, value2, "customerno");
            return (Criteria) this;
        }

        public Criteria andCustomerstateIsNull() {
            addCriterion("CUSTOMERSTATE is null");
            return (Criteria) this;
        }

        public Criteria andCustomerstateIsNotNull() {
            addCriterion("CUSTOMERSTATE is not null");
            return (Criteria) this;
        }

        public Criteria andCustomerstateEqualTo(String value) {
            addCriterion("CUSTOMERSTATE =", value, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateNotEqualTo(String value) {
            addCriterion("CUSTOMERSTATE <>", value, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateGreaterThan(String value) {
            addCriterion("CUSTOMERSTATE >", value, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateGreaterThanOrEqualTo(String value) {
            addCriterion("CUSTOMERSTATE >=", value, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateLessThan(String value) {
            addCriterion("CUSTOMERSTATE <", value, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateLessThanOrEqualTo(String value) {
            addCriterion("CUSTOMERSTATE <=", value, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateLike(String value) {
            addCriterion("CUSTOMERSTATE like", value, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateNotLike(String value) {
            addCriterion("CUSTOMERSTATE not like", value, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateIn(List<String> values) {
            addCriterion("CUSTOMERSTATE in", values, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateNotIn(List<String> values) {
            addCriterion("CUSTOMERSTATE not in", values, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateBetween(String value1, String value2) {
            addCriterion("CUSTOMERSTATE between", value1, value2, "customerstate");
            return (Criteria) this;
        }

        public Criteria andCustomerstateNotBetween(String value1, String value2) {
            addCriterion("CUSTOMERSTATE not between", value1, value2, "customerstate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table llaccidentsub
     *
     * @mbg.generated do_not_delete_during_merge Fri Dec 14 20:16:57 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table llaccidentsub
     *
     * @mbg.generated Fri Dec 14 20:16:57 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}