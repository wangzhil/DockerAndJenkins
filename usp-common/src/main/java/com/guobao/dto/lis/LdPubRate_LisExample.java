package com.guobao.dto.lis;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LdPubRate_LisExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public LdPubRate_LisExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCaltypeIsNull() {
            addCriterion("CALTYPE is null");
            return (Criteria) this;
        }

        public Criteria andCaltypeIsNotNull() {
            addCriterion("CALTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andCaltypeEqualTo(String value) {
            addCriterion("CALTYPE =", value, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeNotEqualTo(String value) {
            addCriterion("CALTYPE <>", value, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeGreaterThan(String value) {
            addCriterion("CALTYPE >", value, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeGreaterThanOrEqualTo(String value) {
            addCriterion("CALTYPE >=", value, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeLessThan(String value) {
            addCriterion("CALTYPE <", value, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeLessThanOrEqualTo(String value) {
            addCriterion("CALTYPE <=", value, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeLike(String value) {
            addCriterion("CALTYPE like", value, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeNotLike(String value) {
            addCriterion("CALTYPE not like", value, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeIn(List<String> values) {
            addCriterion("CALTYPE in", values, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeNotIn(List<String> values) {
            addCriterion("CALTYPE not in", values, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeBetween(String value1, String value2) {
            addCriterion("CALTYPE between", value1, value2, "caltype");
            return (Criteria) this;
        }

        public Criteria andCaltypeNotBetween(String value1, String value2) {
            addCriterion("CALTYPE not between", value1, value2, "caltype");
            return (Criteria) this;
        }

        public Criteria andCurrencyIsNull() {
            addCriterion("CURRENCY is null");
            return (Criteria) this;
        }

        public Criteria andCurrencyIsNotNull() {
            addCriterion("CURRENCY is not null");
            return (Criteria) this;
        }

        public Criteria andCurrencyEqualTo(String value) {
            addCriterion("CURRENCY =", value, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyNotEqualTo(String value) {
            addCriterion("CURRENCY <>", value, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyGreaterThan(String value) {
            addCriterion("CURRENCY >", value, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyGreaterThanOrEqualTo(String value) {
            addCriterion("CURRENCY >=", value, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyLessThan(String value) {
            addCriterion("CURRENCY <", value, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyLessThanOrEqualTo(String value) {
            addCriterion("CURRENCY <=", value, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyLike(String value) {
            addCriterion("CURRENCY like", value, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyNotLike(String value) {
            addCriterion("CURRENCY not like", value, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyIn(List<String> values) {
            addCriterion("CURRENCY in", values, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyNotIn(List<String> values) {
            addCriterion("CURRENCY not in", values, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyBetween(String value1, String value2) {
            addCriterion("CURRENCY between", value1, value2, "currency");
            return (Criteria) this;
        }

        public Criteria andCurrencyNotBetween(String value1, String value2) {
            addCriterion("CURRENCY not between", value1, value2, "currency");
            return (Criteria) this;
        }

        public Criteria andEnddateIsNull() {
            addCriterion("ENDDATE is null");
            return (Criteria) this;
        }

        public Criteria andEnddateIsNotNull() {
            addCriterion("ENDDATE is not null");
            return (Criteria) this;
        }

        public Criteria andEnddateEqualTo(Date value) {
            addCriterionForJDBCDate("ENDDATE =", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ENDDATE <>", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateGreaterThan(Date value) {
            addCriterionForJDBCDate("ENDDATE >", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ENDDATE >=", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateLessThan(Date value) {
            addCriterionForJDBCDate("ENDDATE <", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ENDDATE <=", value, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateIn(List<Date> values) {
            addCriterionForJDBCDate("ENDDATE in", values, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ENDDATE not in", values, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ENDDATE between", value1, value2, "enddate");
            return (Criteria) this;
        }

        public Criteria andEnddateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ENDDATE not between", value1, value2, "enddate");
            return (Criteria) this;
        }

        public Criteria andRiskcodeIsNull() {
            addCriterion("RISKCODE is null");
            return (Criteria) this;
        }

        public Criteria andRiskcodeIsNotNull() {
            addCriterion("RISKCODE is not null");
            return (Criteria) this;
        }

        public Criteria andRiskcodeEqualTo(String value) {
            addCriterion("RISKCODE =", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeNotEqualTo(String value) {
            addCriterion("RISKCODE <>", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeGreaterThan(String value) {
            addCriterion("RISKCODE >", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeGreaterThanOrEqualTo(String value) {
            addCriterion("RISKCODE >=", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeLessThan(String value) {
            addCriterion("RISKCODE <", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeLessThanOrEqualTo(String value) {
            addCriterion("RISKCODE <=", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeLike(String value) {
            addCriterion("RISKCODE like", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeNotLike(String value) {
            addCriterion("RISKCODE not like", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeIn(List<String> values) {
            addCriterion("RISKCODE in", values, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeNotIn(List<String> values) {
            addCriterion("RISKCODE not in", values, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeBetween(String value1, String value2) {
            addCriterion("RISKCODE between", value1, value2, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeNotBetween(String value1, String value2) {
            addCriterion("RISKCODE not between", value1, value2, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRltypeIsNull() {
            addCriterion("RLTYPE is null");
            return (Criteria) this;
        }

        public Criteria andRltypeIsNotNull() {
            addCriterion("RLTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andRltypeEqualTo(String value) {
            addCriterion("RLTYPE =", value, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeNotEqualTo(String value) {
            addCriterion("RLTYPE <>", value, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeGreaterThan(String value) {
            addCriterion("RLTYPE >", value, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeGreaterThanOrEqualTo(String value) {
            addCriterion("RLTYPE >=", value, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeLessThan(String value) {
            addCriterion("RLTYPE <", value, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeLessThanOrEqualTo(String value) {
            addCriterion("RLTYPE <=", value, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeLike(String value) {
            addCriterion("RLTYPE like", value, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeNotLike(String value) {
            addCriterion("RLTYPE not like", value, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeIn(List<String> values) {
            addCriterion("RLTYPE in", values, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeNotIn(List<String> values) {
            addCriterion("RLTYPE not in", values, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeBetween(String value1, String value2) {
            addCriterion("RLTYPE between", value1, value2, "rltype");
            return (Criteria) this;
        }

        public Criteria andRltypeNotBetween(String value1, String value2) {
            addCriterion("RLTYPE not between", value1, value2, "rltype");
            return (Criteria) this;
        }

        public Criteria andSctypeIsNull() {
            addCriterion("SCTYPE is null");
            return (Criteria) this;
        }

        public Criteria andSctypeIsNotNull() {
            addCriterion("SCTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andSctypeEqualTo(String value) {
            addCriterion("SCTYPE =", value, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeNotEqualTo(String value) {
            addCriterion("SCTYPE <>", value, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeGreaterThan(String value) {
            addCriterion("SCTYPE >", value, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeGreaterThanOrEqualTo(String value) {
            addCriterion("SCTYPE >=", value, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeLessThan(String value) {
            addCriterion("SCTYPE <", value, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeLessThanOrEqualTo(String value) {
            addCriterion("SCTYPE <=", value, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeLike(String value) {
            addCriterion("SCTYPE like", value, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeNotLike(String value) {
            addCriterion("SCTYPE not like", value, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeIn(List<String> values) {
            addCriterion("SCTYPE in", values, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeNotIn(List<String> values) {
            addCriterion("SCTYPE not in", values, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeBetween(String value1, String value2) {
            addCriterion("SCTYPE between", value1, value2, "sctype");
            return (Criteria) this;
        }

        public Criteria andSctypeNotBetween(String value1, String value2) {
            addCriterion("SCTYPE not between", value1, value2, "sctype");
            return (Criteria) this;
        }

        public Criteria andStartdateIsNull() {
            addCriterion("STARTDATE is null");
            return (Criteria) this;
        }

        public Criteria andStartdateIsNotNull() {
            addCriterion("STARTDATE is not null");
            return (Criteria) this;
        }

        public Criteria andStartdateEqualTo(Date value) {
            addCriterionForJDBCDate("STARTDATE =", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("STARTDATE <>", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateGreaterThan(Date value) {
            addCriterionForJDBCDate("STARTDATE >", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("STARTDATE >=", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateLessThan(Date value) {
            addCriterionForJDBCDate("STARTDATE <", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("STARTDATE <=", value, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateIn(List<Date> values) {
            addCriterionForJDBCDate("STARTDATE in", values, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("STARTDATE not in", values, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("STARTDATE between", value1, value2, "startdate");
            return (Criteria) this;
        }

        public Criteria andStartdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("STARTDATE not between", value1, value2, "startdate");
            return (Criteria) this;
        }

        public Criteria andYmdinterestIsNull() {
            addCriterion("YMDINTEREST is null");
            return (Criteria) this;
        }

        public Criteria andYmdinterestIsNotNull() {
            addCriterion("YMDINTEREST is not null");
            return (Criteria) this;
        }

        public Criteria andYmdinterestEqualTo(String value) {
            addCriterion("YMDINTEREST =", value, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestNotEqualTo(String value) {
            addCriterion("YMDINTEREST <>", value, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestGreaterThan(String value) {
            addCriterion("YMDINTEREST >", value, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestGreaterThanOrEqualTo(String value) {
            addCriterion("YMDINTEREST >=", value, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestLessThan(String value) {
            addCriterion("YMDINTEREST <", value, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestLessThanOrEqualTo(String value) {
            addCriterion("YMDINTEREST <=", value, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestLike(String value) {
            addCriterion("YMDINTEREST like", value, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestNotLike(String value) {
            addCriterion("YMDINTEREST not like", value, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestIn(List<String> values) {
            addCriterion("YMDINTEREST in", values, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestNotIn(List<String> values) {
            addCriterion("YMDINTEREST not in", values, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestBetween(String value1, String value2) {
            addCriterion("YMDINTEREST between", value1, value2, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andYmdinterestNotBetween(String value1, String value2) {
            addCriterion("YMDINTEREST not between", value1, value2, "ymdinterest");
            return (Criteria) this;
        }

        public Criteria andRateIsNull() {
            addCriterion("RATE is null");
            return (Criteria) this;
        }

        public Criteria andRateIsNotNull() {
            addCriterion("RATE is not null");
            return (Criteria) this;
        }

        public Criteria andRateEqualTo(Double value) {
            addCriterion("RATE =", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotEqualTo(Double value) {
            addCriterion("RATE <>", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateGreaterThan(Double value) {
            addCriterion("RATE >", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateGreaterThanOrEqualTo(Double value) {
            addCriterion("RATE >=", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateLessThan(Double value) {
            addCriterion("RATE <", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateLessThanOrEqualTo(Double value) {
            addCriterion("RATE <=", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateIn(List<Double> values) {
            addCriterion("RATE in", values, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotIn(List<Double> values) {
            addCriterion("RATE not in", values, "rate");
            return (Criteria) this;
        }

        public Criteria andRateBetween(Double value1, Double value2) {
            addCriterion("RATE between", value1, value2, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotBetween(Double value1, Double value2) {
            addCriterion("RATE not between", value1, value2, "rate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ldpubrate
     *
     * @mbggenerated do_not_delete_during_merge Mon Sep 17 21:36:38 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ldpubrate
     *
     * @mbggenerated Mon Sep 17 21:36:38 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}