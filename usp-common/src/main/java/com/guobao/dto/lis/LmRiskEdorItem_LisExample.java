package com.guobao.dto.lis;

import java.util.ArrayList;
import java.util.List;

public class LmRiskEdorItem_LisExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public LmRiskEdorItem_LisExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEdorcodeIsNull() {
            addCriterion("EDORCODE is null");
            return (Criteria) this;
        }

        public Criteria andEdorcodeIsNotNull() {
            addCriterion("EDORCODE is not null");
            return (Criteria) this;
        }

        public Criteria andEdorcodeEqualTo(String value) {
            addCriterion("EDORCODE =", value, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeNotEqualTo(String value) {
            addCriterion("EDORCODE <>", value, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeGreaterThan(String value) {
            addCriterion("EDORCODE >", value, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeGreaterThanOrEqualTo(String value) {
            addCriterion("EDORCODE >=", value, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeLessThan(String value) {
            addCriterion("EDORCODE <", value, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeLessThanOrEqualTo(String value) {
            addCriterion("EDORCODE <=", value, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeLike(String value) {
            addCriterion("EDORCODE like", value, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeNotLike(String value) {
            addCriterion("EDORCODE not like", value, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeIn(List<String> values) {
            addCriterion("EDORCODE in", values, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeNotIn(List<String> values) {
            addCriterion("EDORCODE not in", values, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeBetween(String value1, String value2) {
            addCriterion("EDORCODE between", value1, value2, "edorcode");
            return (Criteria) this;
        }

        public Criteria andEdorcodeNotBetween(String value1, String value2) {
            addCriterion("EDORCODE not between", value1, value2, "edorcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeIsNull() {
            addCriterion("RISKCODE is null");
            return (Criteria) this;
        }

        public Criteria andRiskcodeIsNotNull() {
            addCriterion("RISKCODE is not null");
            return (Criteria) this;
        }

        public Criteria andRiskcodeEqualTo(String value) {
            addCriterion("RISKCODE =", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeNotEqualTo(String value) {
            addCriterion("RISKCODE <>", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeGreaterThan(String value) {
            addCriterion("RISKCODE >", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeGreaterThanOrEqualTo(String value) {
            addCriterion("RISKCODE >=", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeLessThan(String value) {
            addCriterion("RISKCODE <", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeLessThanOrEqualTo(String value) {
            addCriterion("RISKCODE <=", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeLike(String value) {
            addCriterion("RISKCODE like", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeNotLike(String value) {
            addCriterion("RISKCODE not like", value, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeIn(List<String> values) {
            addCriterion("RISKCODE in", values, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeNotIn(List<String> values) {
            addCriterion("RISKCODE not in", values, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeBetween(String value1, String value2) {
            addCriterion("RISKCODE between", value1, value2, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRiskcodeNotBetween(String value1, String value2) {
            addCriterion("RISKCODE not between", value1, value2, "riskcode");
            return (Criteria) this;
        }

        public Criteria andRisknameIsNull() {
            addCriterion("RISKNAME is null");
            return (Criteria) this;
        }

        public Criteria andRisknameIsNotNull() {
            addCriterion("RISKNAME is not null");
            return (Criteria) this;
        }

        public Criteria andRisknameEqualTo(String value) {
            addCriterion("RISKNAME =", value, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameNotEqualTo(String value) {
            addCriterion("RISKNAME <>", value, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameGreaterThan(String value) {
            addCriterion("RISKNAME >", value, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameGreaterThanOrEqualTo(String value) {
            addCriterion("RISKNAME >=", value, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameLessThan(String value) {
            addCriterion("RISKNAME <", value, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameLessThanOrEqualTo(String value) {
            addCriterion("RISKNAME <=", value, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameLike(String value) {
            addCriterion("RISKNAME like", value, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameNotLike(String value) {
            addCriterion("RISKNAME not like", value, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameIn(List<String> values) {
            addCriterion("RISKNAME in", values, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameNotIn(List<String> values) {
            addCriterion("RISKNAME not in", values, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameBetween(String value1, String value2) {
            addCriterion("RISKNAME between", value1, value2, "riskname");
            return (Criteria) this;
        }

        public Criteria andRisknameNotBetween(String value1, String value2) {
            addCriterion("RISKNAME not between", value1, value2, "riskname");
            return (Criteria) this;
        }

        public Criteria andFintypeIsNull() {
            addCriterion("FINTYPE is null");
            return (Criteria) this;
        }

        public Criteria andFintypeIsNotNull() {
            addCriterion("FINTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andFintypeEqualTo(String value) {
            addCriterion("FINTYPE =", value, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeNotEqualTo(String value) {
            addCriterion("FINTYPE <>", value, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeGreaterThan(String value) {
            addCriterion("FINTYPE >", value, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeGreaterThanOrEqualTo(String value) {
            addCriterion("FINTYPE >=", value, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeLessThan(String value) {
            addCriterion("FINTYPE <", value, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeLessThanOrEqualTo(String value) {
            addCriterion("FINTYPE <=", value, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeLike(String value) {
            addCriterion("FINTYPE like", value, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeNotLike(String value) {
            addCriterion("FINTYPE not like", value, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeIn(List<String> values) {
            addCriterion("FINTYPE in", values, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeNotIn(List<String> values) {
            addCriterion("FINTYPE not in", values, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeBetween(String value1, String value2) {
            addCriterion("FINTYPE between", value1, value2, "fintype");
            return (Criteria) this;
        }

        public Criteria andFintypeNotBetween(String value1, String value2) {
            addCriterion("FINTYPE not between", value1, value2, "fintype");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyIsNull() {
            addCriterion("EDORPROPERTY is null");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyIsNotNull() {
            addCriterion("EDORPROPERTY is not null");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyEqualTo(String value) {
            addCriterion("EDORPROPERTY =", value, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyNotEqualTo(String value) {
            addCriterion("EDORPROPERTY <>", value, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyGreaterThan(String value) {
            addCriterion("EDORPROPERTY >", value, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyGreaterThanOrEqualTo(String value) {
            addCriterion("EDORPROPERTY >=", value, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyLessThan(String value) {
            addCriterion("EDORPROPERTY <", value, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyLessThanOrEqualTo(String value) {
            addCriterion("EDORPROPERTY <=", value, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyLike(String value) {
            addCriterion("EDORPROPERTY like", value, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyNotLike(String value) {
            addCriterion("EDORPROPERTY not like", value, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyIn(List<String> values) {
            addCriterion("EDORPROPERTY in", values, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyNotIn(List<String> values) {
            addCriterion("EDORPROPERTY not in", values, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyBetween(String value1, String value2) {
            addCriterion("EDORPROPERTY between", value1, value2, "edorproperty");
            return (Criteria) this;
        }

        public Criteria andEdorpropertyNotBetween(String value1, String value2) {
            addCriterion("EDORPROPERTY not between", value1, value2, "edorproperty");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lmriskedoritem
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 06 15:04:58 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lmriskedoritem
     *
     * @mbggenerated Tue Mar 06 15:04:58 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}