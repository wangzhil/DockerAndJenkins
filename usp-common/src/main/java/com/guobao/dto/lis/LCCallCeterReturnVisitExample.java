package com.guobao.dto.lis;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LCCallCeterReturnVisitExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public LCCallCeterReturnVisitExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andSerialnoIsNull() {
            addCriterion("SerialNo is null");
            return (Criteria) this;
        }

        public Criteria andSerialnoIsNotNull() {
            addCriterion("SerialNo is not null");
            return (Criteria) this;
        }

        public Criteria andSerialnoEqualTo(Long value) {
            addCriterion("SerialNo =", value, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoNotEqualTo(Long value) {
            addCriterion("SerialNo <>", value, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoGreaterThan(Long value) {
            addCriterion("SerialNo >", value, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoGreaterThanOrEqualTo(Long value) {
            addCriterion("SerialNo >=", value, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoLessThan(Long value) {
            addCriterion("SerialNo <", value, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoLessThanOrEqualTo(Long value) {
            addCriterion("SerialNo <=", value, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoIn(List<Long> values) {
            addCriterion("SerialNo in", values, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoNotIn(List<Long> values) {
            addCriterion("SerialNo not in", values, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoBetween(Long value1, Long value2) {
            addCriterion("SerialNo between", value1, value2, "serialno");
            return (Criteria) this;
        }

        public Criteria andSerialnoNotBetween(Long value1, Long value2) {
            addCriterion("SerialNo not between", value1, value2, "serialno");
            return (Criteria) this;
        }

        public Criteria andContnoIsNull() {
            addCriterion("ContNo is null");
            return (Criteria) this;
        }

        public Criteria andContnoIsNotNull() {
            addCriterion("ContNo is not null");
            return (Criteria) this;
        }

        public Criteria andContnoEqualTo(String value) {
            addCriterion("ContNo =", value, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoNotEqualTo(String value) {
            addCriterion("ContNo <>", value, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoGreaterThan(String value) {
            addCriterion("ContNo >", value, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoGreaterThanOrEqualTo(String value) {
            addCriterion("ContNo >=", value, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoLessThan(String value) {
            addCriterion("ContNo <", value, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoLessThanOrEqualTo(String value) {
            addCriterion("ContNo <=", value, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoLike(String value) {
            addCriterion("ContNo like", value, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoNotLike(String value) {
            addCriterion("ContNo not like", value, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoIn(List<String> values) {
            addCriterion("ContNo in", values, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoNotIn(List<String> values) {
            addCriterion("ContNo not in", values, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoBetween(String value1, String value2) {
            addCriterion("ContNo between", value1, value2, "contno");
            return (Criteria) this;
        }

        public Criteria andContnoNotBetween(String value1, String value2) {
            addCriterion("ContNo not between", value1, value2, "contno");
            return (Criteria) this;
        }

        public Criteria andCalldateIsNull() {
            addCriterion("CallDate is null");
            return (Criteria) this;
        }

        public Criteria andCalldateIsNotNull() {
            addCriterion("CallDate is not null");
            return (Criteria) this;
        }

        public Criteria andCalldateEqualTo(Date value) {
            addCriterionForJDBCDate("CallDate =", value, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateNotEqualTo(Date value) {
            addCriterionForJDBCDate("CallDate <>", value, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateGreaterThan(Date value) {
            addCriterionForJDBCDate("CallDate >", value, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CallDate >=", value, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateLessThan(Date value) {
            addCriterionForJDBCDate("CallDate <", value, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CallDate <=", value, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateIn(List<Date> values) {
            addCriterionForJDBCDate("CallDate in", values, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateNotIn(List<Date> values) {
            addCriterionForJDBCDate("CallDate not in", values, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CallDate between", value1, value2, "calldate");
            return (Criteria) this;
        }

        public Criteria andCalldateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CallDate not between", value1, value2, "calldate");
            return (Criteria) this;
        }

        public Criteria andReturnvisitIsNull() {
            addCriterion("ReturnVisit is null");
            return (Criteria) this;
        }

        public Criteria andReturnvisitIsNotNull() {
            addCriterion("ReturnVisit is not null");
            return (Criteria) this;
        }

        public Criteria andReturnvisitEqualTo(String value) {
            addCriterion("ReturnVisit =", value, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitNotEqualTo(String value) {
            addCriterion("ReturnVisit <>", value, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitGreaterThan(String value) {
            addCriterion("ReturnVisit >", value, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitGreaterThanOrEqualTo(String value) {
            addCriterion("ReturnVisit >=", value, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitLessThan(String value) {
            addCriterion("ReturnVisit <", value, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitLessThanOrEqualTo(String value) {
            addCriterion("ReturnVisit <=", value, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitLike(String value) {
            addCriterion("ReturnVisit like", value, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitNotLike(String value) {
            addCriterion("ReturnVisit not like", value, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitIn(List<String> values) {
            addCriterion("ReturnVisit in", values, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitNotIn(List<String> values) {
            addCriterion("ReturnVisit not in", values, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitBetween(String value1, String value2) {
            addCriterion("ReturnVisit between", value1, value2, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andReturnvisitNotBetween(String value1, String value2) {
            addCriterion("ReturnVisit not between", value1, value2, "returnvisit");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNull() {
            addCriterion("Remarks is null");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNotNull() {
            addCriterion("Remarks is not null");
            return (Criteria) this;
        }

        public Criteria andRemarksEqualTo(String value) {
            addCriterion("Remarks =", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotEqualTo(String value) {
            addCriterion("Remarks <>", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThan(String value) {
            addCriterion("Remarks >", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThanOrEqualTo(String value) {
            addCriterion("Remarks >=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThan(String value) {
            addCriterion("Remarks <", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThanOrEqualTo(String value) {
            addCriterion("Remarks <=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLike(String value) {
            addCriterion("Remarks like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotLike(String value) {
            addCriterion("Remarks not like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksIn(List<String> values) {
            addCriterion("Remarks in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotIn(List<String> values) {
            addCriterion("Remarks not in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksBetween(String value1, String value2) {
            addCriterion("Remarks between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotBetween(String value1, String value2) {
            addCriterion("Remarks not between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeIsNull() {
            addCriterion("ReturnCallType is null");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeIsNotNull() {
            addCriterion("ReturnCallType is not null");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeEqualTo(String value) {
            addCriterion("ReturnCallType =", value, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeNotEqualTo(String value) {
            addCriterion("ReturnCallType <>", value, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeGreaterThan(String value) {
            addCriterion("ReturnCallType >", value, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeGreaterThanOrEqualTo(String value) {
            addCriterion("ReturnCallType >=", value, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeLessThan(String value) {
            addCriterion("ReturnCallType <", value, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeLessThanOrEqualTo(String value) {
            addCriterion("ReturnCallType <=", value, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeLike(String value) {
            addCriterion("ReturnCallType like", value, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeNotLike(String value) {
            addCriterion("ReturnCallType not like", value, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeIn(List<String> values) {
            addCriterion("ReturnCallType in", values, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeNotIn(List<String> values) {
            addCriterion("ReturnCallType not in", values, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeBetween(String value1, String value2) {
            addCriterion("ReturnCallType between", value1, value2, "returncalltype");
            return (Criteria) this;
        }

        public Criteria andReturncalltypeNotBetween(String value1, String value2) {
            addCriterion("ReturnCallType not between", value1, value2, "returncalltype");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 20 16:43:25 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lccallceterreturnvisit
     *
     * @mbggenerated Mon Aug 20 16:43:25 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}